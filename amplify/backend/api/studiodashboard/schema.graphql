type Genre @model @auth(rules: [{allow: public, operations: [read]}, {allow: groups, groups: ["admin"], operations: [read, create, update, delete]}, {allow: private, operations: [create, read]}]) {
  id: ID!
  name: String
  value: String
  Products: [Product] @hasMany(indexName: "byGenre", fields: ["id"])
}

type Platform @model @auth(rules: [{allow: public, operations: [read]}, {allow: groups, groups: ["admin"], operations: [read, create, update, delete]}, {allow: private, operations: [create, read]}]) {
  id: ID!
  name: String
  value: String
  Products: [Product] @hasMany(indexName: "byPlatform", fields: ["id"])
}

type Product @model @auth(rules: [{allow: public, operations: [read]}, {allow: groups, groups: ["admin"], operations: [read, create, update, delete]}, {allow: private, operations: [create, read]}]) {
  id: ID!
  name: String
  isSold: Boolean
  price: Float
  image: String
  platformID: ID! @index(name: "byPlatform")
  Genre: Genre @belongsTo(fields: ["genreID"])
  Platform: Platform @belongsTo(fields: ["platformID"])
  genreID: ID! @index(name: "byGenre")
}
 